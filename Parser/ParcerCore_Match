import requests
import pandas as pd

def parse_matches_and_save(match_ids, output_file='matches_data.csv'):
    data = []

    for match_id in match_ids:
        # Формируем URL для запроса к API OpenDota с использованием match_id
        url = f"https://api.opendota.com/api/matches/{match_id}"

        # Отправляем GET-запрос к API
        response = requests.get(url)

        # Проверяем успешность запроса
        if response.status_code == 200:
            # Получаем данные в формате JSON
            match_data = response.json()


            # Извлекаем информацию о пиках и банах
            picks_bans = match_data.get('picks_bans', [])

            # Инициализируем списки для каждого атрибута пика/бана
            is_pick_list = []
            hero_id_list = []
            team_list = []
            order_list = []

            # Обрабатываем каждый элемент массива 'picks_bans'
            for pick_ban in picks_bans:
                is_pick_list.append(pick_ban['is_pick'])
                hero_id_list.append(pick_ban['hero_id'])
                team_list.append(pick_ban['team'])
                order_list.append(pick_ban['order'])

            # Извлекаем информацию о игроках
            players = match_data.get('players', [])

            # Инициализируем списки для каждого атрибута игрока (можно еще добавить)
            account_id_list = []

            # Обрабатываем каждый элемент массива 'players'
            for player in players:  
                account_id_list.append(player['account_id'])
                
            # Добавляем информацию о матче в список
            data.append({
                'Match ID': match_data['match_id'],
                'Duration': match_data['duration'],
                'Winer': 'Radiant' if match_data['radiant_win'] else 'Dire',
                 # Добавляем информацию о пиках и банах
                'Is_Pick': is_pick_list,
                'Hero_ID': hero_id_list,
                'Team': team_list,
                'Order': order_list,
                # Добавляем информацию о игроках и командах
                'Radiant_team': match_data['radiant_team'],
                'Dire_team': match_data['dire_team'],
                'Account_id': account_id_list
                # Дополнительные поля могут быть добавлены по вашему выбору
            })

        else:
            print(f"Ошибка при запросе {match_id}: {response.status_code}")

    # Создаем DataFrame с использованием pandas
    df = pd.DataFrame(data, columns=['Match ID', 'Duration', 'Winer', 'Is_Pick', 'Hero_ID', 'Team', 'Order', 'Radiant_team', 'Dire_team', 'Account_id'])

    # Сохраняем DataFrame в файл CSV
    df.to_csv(output_file, index=False)
    print(f"Данные сохранены в файл: {output_file}")
